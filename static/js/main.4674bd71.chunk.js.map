{"version":3,"sources":["components/Navbar.js","components/Text.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toogleMode","htmlFor","Text","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","Heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","split","length","Alert","alert","role","msg","App","setMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","document","body","heading","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4674bd71.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\n\r\n// import propTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n  \r\n <nav className={`navbar navbar-expand-lg  navbar-${props.mode} bg-${props.mode}`} >\r\n      <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">Navbar</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href='/'>Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">About</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">Pricing</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\" href='/'>Disabled</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  <div className='container'>\r\n  <div className={`form-check form-switch text-${props.mode === 'light'? 'dark' :'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toogleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n  </div>\r\n  </div>\r\n  </div>\r\n</nav>\r\n\r\n  )\r\n}\r\n\r\n\r\n// Navbar.prototype = {Navbar: PropTypes.string,}\r\n\r\n// Navbar.defaultProps = {\r\n//   Navbar: 'this is nav'\r\n// };","import React, {useState}from 'react'\r\n\r\nexport default function Text(props) {\r\n\r\n  const handleOnChange = (event) =>{\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleUpClick = () =>{\r\n    let newText = text.toUpperCase ();\r\n    setText(newText);\r\n  } \r\n  const handleLoClick = () =>{\r\n    let newText = text.toLowerCase ();\r\n    setText(newText);\r\n  } \r\n\r\n  const [text, setText] = useState('enter the text here');\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.Heading} </h1>\r\n   \r\n    <div className=\"mb-3\" >\r\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor :props.mode === 'dark'? 'grey' :'white'}} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n  </div>\r\n  <button onClick={handleUpClick} className=\"btn btn-primary\">Convert to Uppercase</button>\r\n  <button onClick={handleLoClick} className=\"btn btn-primary\">Convert to lowercase</button>\r\n  </div>\r\n      <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h1>your text summry</h1>\r\n      <p> {text.split(\"\").length} words and {text.length} character </p>\r\n     \r\n      </div>\r\n      </>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert  &&  <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n      <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n  {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n</div>\r\n  )\r\n}\r\n","\nimport './App.css';\n\n// import {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\"\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\n\n// import About from './components/About';\n\nimport Navbar from './components/Navbar';\nimport Text from './components/Text';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [mode , setMode] = useState('light');\n  \n  const [alert , setAlert] = useState(null)\n  const showAlert = (message , type)=>{\n    setAlert({\n      msg: message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n  const toogleMode =() =>{\n    if (mode === 'dark'){\n      setMode('light')\n      document.body.style.backgroundColor = 'white'  \n      showAlert(\"light mode has been enable\", \"success\")\n    }\n    else{\n      setMode('dark')\n      document.body.style.backgroundColor = 'grey'\n      showAlert(\"dark mode has been enable\", \"success\")\n    }\n  }\n  \n\n  return (\n    <>\n    {/* <Router>\n    <Navbar  toogleMode={toogleMode}/>\n    <Alert  alert={alert}/>\n    <div className=\"container my-3\">\n      <Switch>\n        <Route path=\"/about\">\n          <About/>\n        </Route>\n        <Route path=\"/\">\n    <Text heading=\"Enter the text to analyze below\" mode={mode}/>  \n        </Route>\n      </Switch>\n    </div>\n    </Router> */}\n\n    {/* 2nd */}\n    {/* <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n\n        </ul>\n        <Navbar  toogleMode={toogleMode}/>\n         <Alert  alert={alert}/>\n         <div className=\"container my-3\">\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n\n          <Route path=\"/\">\n          <Text heading=\"Enter the text to analyze below\" mode={mode}/> \n          </Route>\n        </Switch>\n        </div>\n      </div>\n    </Router> */}\n\n    {/* 3rd */}\n    <Navbar  toogleMode={toogleMode}/>\n         <Alert  alert={alert}/>\n         {/* <About/> */}\n         <Text heading=\"Enter the text to analyze below\" mode={mode}/>\n    {/* <Router>\n        <Routes>\n          <Route exact path=\"/\" element={<Text heading=\"Enter the text to analyze below\" mode={mode}/> }/>\n          <Route exact path=\"/about\" element={ <About />}/>\n \n        </Routes>\n      \n    </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}